<!--
  ~ This file is part of the Cerebro distribution.
  ~ (https://github.com/voyages-sncf-technologies/cerebro)
  ~ Copyright (C) 2017 VSCT.
  ~
  ~ Cerebro is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Affero General Public License as
  ~ published by the Free Software Foundation, version 3 of the License.
  ~
  ~ Cerebro is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  ~ GNU Affero General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Affero General Public License
  ~ along with this program. If not, see <http://www.gnu.org/licenses/>.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.vsct.supervision.web</groupId>
		<artifactId>cerebro</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>

	<groupId>com.vsct.supervision.web.cerebro</groupId>
	<artifactId>cerebro-services</artifactId>
	<packaging>jar</packaging>

	<name>Cerebro Services</name>
	<description>Cerebro REST webservices, used as backend API by the Cerebro dashboard.</description>

	<properties>
		<!-- Default run config (filtered to application.properties) -->
		<application.logs.dir>${project.build.directory}/app-logs</application.logs.dir>

		<!-- Java config -->
		<java.version>1.8</java.version>

		<!-- Maven plugins config -->
		<maven.compiler.plugin>3.1</maven.compiler.plugin>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<maven.javadoc.plugin>2.10.1</maven.javadoc.plugin>
		<maven.jar.plugin>2.6</maven.jar.plugin>
		<maven.source.plugin>2.4</maven.source.plugin>
		<maven.cobertura.plugin>2.7</maven.cobertura.plugin>

		<!-- Library versions -->
		<lib.spring-boot.version>1.3.0.RELEASE</lib.spring-boot.version>
		<lib.javax.mail.version>1.4.7</lib.javax.mail.version>
		<lib.activation.version>1.1.1</lib.activation.version>
		<lib.jackson.version>2.6.5</lib.jackson.version>
		<lib.logback.version>1.1.2</lib.logback.version>
		<lib.velocity.version>1.7</lib.velocity.version>
		<lib.velocity-tools.version>2.0</lib.velocity-tools.version>
		<lib.mockito.version>1.9.5-rc1</lib.mockito.version>
		<lib.slf4j.version>1.7.13</lib.slf4j.version>
		<lib.junit4.version>4.11</lib.junit4.version>
		<lib.guava.version>18.0</lib.guava.version>
		<lib.janino.version>2.7.8</lib.janino.version>
		<lib.hamcrest.version>1.3</lib.hamcrest.version>
		<lib.commons.io.version>2.4</lib.commons.io.version>
		<lib.assertj.version>3.5.2</lib.assertj.version>
		<lib.json-path.version>2.2.0</lib.json-path.version>
		<lib.aspectj.version>1.8.7</lib.aspectj.version>
		<lib.swagger.version>2.6.1</lib.swagger.version>
		<lib.keycloak.version>2.1.0.Final</lib.keycloak.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${lib.spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
			<version>${lib.spring-boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${lib.guava.version}</version>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${lib.logback.version}</version>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-access</artifactId>
			<version>${lib.logback.version}</version>
		</dependency>

		<dependency>
			<groupId>org.codehaus.janino</groupId>
			<artifactId>janino</artifactId>
			<version>${lib.janino.version}</version>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${lib.aspectj.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
		</dependency>

		<!-- Jackson -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${lib.jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${lib.jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${lib.jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
			<version>${lib.jackson.version}</version>
		</dependency>

		<!-- Keycloak authentication -->
		<!--<dependency>-->
			<!--<groupId>org.keycloak</groupId>-->
			<!--<artifactId>keycloak-spring-boot-adapter</artifactId>-->
			<!--<version>${lib.keycloak.version}</version>-->
		<!--</dependency>-->
		<!--<dependency>-->
			<!--<groupId>org.keycloak</groupId>-->
			<!--<artifactId>keycloak-tomcat8-adapter</artifactId>-->
			<!--<version>${lib.keycloak.version}</version>-->
		<!--</dependency>-->

		<!-- Email notifications -->
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>${lib.javax.mail.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.activation</groupId>
			<artifactId>activation</artifactId>
			<version>${lib.activation.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity</artifactId>
			<version>${lib.velocity.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity-tools</artifactId>
			<version>${lib.velocity-tools.version}</version>
		</dependency>

		<!-- Tests -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${lib.mockito.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.hamcrest</groupId>
					<artifactId>hamcrest-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${lib.junit4.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.hamcrest</groupId>
					<artifactId>hamcrest-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>${lib.hamcrest.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${lib.commons.io.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${lib.assertj.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>${lib.json-path.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${lib.swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${lib.swagger.version}</version>
		</dependency>

	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven.compiler.plugin}</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
						<optimize>true</optimize>
						<showWarnings>true</showWarnings>
						<showDeprecation>true</showDeprecation>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven.javadoc.plugin}</version>
					<configuration>
						<javadocVersion>${java.version}</javadocVersion>
						<quiet>true</quiet>
						<charset>${project.build.sourceEncoding}</charset>
						<encoding>${project.build.sourceEncoding}</encoding>
						<docencoding>${project.build.sourceEncoding}</docencoding>
						<additionalJOption>-J-Xmx512m</additionalJOption>
						<author>false</author>
						<additionalparam>-Xdoclint:none</additionalparam>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven.jar.plugin}</version>
					<configuration>
						<archive>
							<manifest>
								<!--
                                    Default mapping (see https://maven.apache.org/shared/maven-archiver/examples/manifest.html):
                                    Manifest-Version: x.x
                                    Implementation-Vendor: ${project.organization.name}
                                    Implementation-Title: ${project.name}
                                    Implementation-Version: ${project.version}
                                    Implementation-Vendor-Id: ${project.groupId}
                                    Built-By: ${user.name}
                                    Build-Jdk: ${java.version}
                                    Class-Path: dependencies, using relative path in Maven-repo style
                                    Specification-Vendor: ${project.organization.name}
                                    Specification-Title: ${project.name}
                                    Created-By: Apache Maven x.x.x
                                    Specification-Version: ${project.version}
                                    Archiver-Version: Plexus Archiver
                                 -->
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
								<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
								<addClasspath>true</addClasspath>
								<classpathLayoutType>repository</classpathLayoutType>
							</manifest>
							<manifestEntries>
								<Implementation-Module>${project.artifactId}</Implementation-Module>
								<Implementation-Encoding>${project.build.sourceEncoding}</Implementation-Encoding>
								<!-- Source info generated by git-commit-id-plugin -->
								<Implementation-Sources-Tags>${git.tags}</Implementation-Sources-Tags>
								<Implementation-Sources-Commit-Id>${git.commit.id}</Implementation-Sources-Commit-Id>
								<Implementation-Sources-Commit-Date>${git.commit.time}</Implementation-Sources-Commit-Date>
								<Implementation-Sources-Commit-Author>${git.commit.user.name} (${git.commit.user.email})</Implementation-Sources-Commit-Author>
								<Implementation-Sources-Commit-Message>${git.commit.message.short}</Implementation-Sources-Commit-Message>
								<Implementation-Sources-Branch>${git.branch}</Implementation-Sources-Branch>
								<Implementation-Sources-Describe>${git.commit.id.describe-short}</Implementation-Sources-Describe>
								<Built-On-OS>${os.name} (${os.version} / ${os.arch})</Built-On-OS>
								<Built-On-Host>${git.build.host}</Built-On-Host>
								<Build-Jdk-Details>${java.version} (${java.vendor})</Build-Jdk-Details>
								<!-- Build variables set by Jenkins -->
								<Build-Job-Name>${env.BUILD_TAG} (${env.BUILD_URL})</Build-Job-Name>
								<Build-Job-Date>${env.BUILD_ID}</Build-Job-Date>
								<Build-Job-Node>${env.NODE_NAME}</Build-Job-Node>
								<Build-Job-User>${env.BUILD_USER_ID}</Build-Job-User>
								<!-- Timestamp generated by buildnumber-maven-plugin -->
								<Build-Date>${timestamp}</Build-Date>
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<version>${maven.cobertura.plugin}</version>
					<configuration>
						<formats>
							<format>xml</format>
							<format>html</format>
						</formats>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${lib.spring-boot.version}</version>
				<configuration>
					<jvmArguments>
						-Dinstance=LOCALHOST -Dapplication.logs.dir=${application.logs.dir}
					</jvmArguments>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Copy and filter dev properties to /target folder, convenient for 
				tests (properties not included in JAR) -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>build-dev-properties</id>
						<phase>initialize</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<resources>
								<resource>
									<directory>externalconf</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<!-- Additional packaging for CI, ex. Jenkins -->
			<id>build-server</id>
			<activation>
				<!-- Jenkins by default defines a property BUILD_NUMBER, so we assume if it's Jenkins it's build server. -->
				<property>
					<name>env.BUILD_NUMBER</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<!--
                                    Must be associated to package phase in order to be
                                    installed/deployed
                                -->
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-source-plugin</artifactId>
						<version>${maven.source.plugin}</version>
						<executions>
							<execution>
								<id>attach-sources</id>
								<!--
                                    Must be associated to package phase in order to be
                                    installed/deployed
                                -->
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>cobertura-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>report-coverage</id>
								<phase>verify</phase>
								<goals>
									<goal>cobertura</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
